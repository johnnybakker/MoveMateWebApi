@startuml Class diagram MoveMateApi

	skinparam linetype polyline
	skinparam linetype ortho

	namespace MoveMate {

		namespace Database {
			class MoveMateDbContext
		}
		
		namespace Repositories {
			abstract Repository {
				#_constext: MoveMateDbContext
			}

			class SessionRepository
			class UserRepository
			class WorkoutRepository

			Repository <|-- UserRepository
			Repository <|-- WorkoutRepository
			Repository <|-- SessionRepository
		}
		
		namespace Controllers {

			class ApiController {
				+CurrentSession: Session
				+CurrentUser: User
			}

			class SessionController
			class UserController
			class WorkoutController

			ApiController <|-- SessionController
			ApiController <|-- UserController
			ApiController <|-- WorkoutController
		}

		namespace Models {

			namespace Api {

				class ApiResult {
					+Type: ApiResultType
					+Date: object
				}

				enum ApiResultType {
					Success = 0
					Failed = 1
				}

				ApiResult --* ApiResultType
			}

			namespace Data {

				class Session {
					+Token: string
					+FirebaseToken: string
					+User: User
					+UserId: int
					+ExpireDate: DateTime
				}

				class Subscription {
					+User: User
					+UserId: int
					+ToUser: User
					+ToUserId: int
					+IsFavorite: bool
				}

				class User {		
					+Username: string
					+Email: string
					+Password: string
					+Subscriptions: List<Subscription>
				 	+Subscribers: List<Subscription>
					+Sessions: List<Session>
					+Workouts: List<Workout> 
				}

				User --|> Entity
				Session --|> Entity
				Subscription --|> Entity


				Session --* User 
				User *-- Subscription
				Workout --* User

				abstract Entity {
					+Id: int
				}

				class EnumEntity<T: Enum> {
					+Name: string,
					+Value: T
				}

				class Workout {
					+User: User
					+UserId: int
					+StartDate: DateTime
					+EndDate: DateTime?
					+Data: List<WorkoutData>
					+TypeEntity: EnumEntity<WorkoutType>
					+TypeId: int
				}
				
				class WorkoutData {
					+Workout: Workout
					+WorkoutId: int
					+Time: long
					+Data: JsonObject
				}

				enum WorkoutType {
					RUNNING = 1,
					WALKING = 2
				}

				Workout --* WorkoutType 
				Entity <|-- EnumEntity
				Entity <|-- Workout
				Entity <|-- WorkoutData
	

		
				Workout --* EnumEntity
				WorkoutData --* Workout



			}

		}
	}

	MoveMate.Repositories.Repository --* MoveMate.Database.MoveMateDbContext 
	MoveMate.Controllers.ApiController ..> MoveMate.Models.Api.ApiResult
	MoveMate.Controllers.ApiController ..> MoveMate.Models.Data.Entity
	MoveMate.Repositories.Repository ..> MoveMate.Models.Data.Entity
	MoveMate.Database.MoveMateDbContext ..> MoveMate.Models.Data.Entity

	' MoveMate.Database.MoveMateDbContext ..> MoveMate.Models.Data.User
	' MoveMate.Database.MoveMateDbContext ..> MoveMate.Models.Data.Session
	' MoveMate.Database.MoveMateDbContext ..> MoveMate.Models.Data.Subscription
	' MoveMate.Database.MoveMateDbContext ..> MoveMate.Models.Data.Workout
	' MoveMate.Database.MoveMateDbContext ..> MoveMate.Models.Data.WorkoutData
	' MoveMate.Database.MoveMateDbContext ..> MoveMate.Models.Data.EnumEntity

	' MoveMate.Repositories.UserRepository ..> MoveMate.Models.Data.User

@enduml